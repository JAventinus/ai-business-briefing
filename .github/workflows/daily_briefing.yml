name: Daily AI Business Briefing

on:
  schedule:
    - cron:  '30 3 * * *'          # 05 : 30 CEST
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY:       ${{ secrets.OPENAI_API_KEY }}
      GOOGLE_DRIVE_FOLDER:  ${{ secrets.GOOGLE_DRIVE_FOLDER }}   # Ziel-Ordner-ID

    steps:
    # 1 ─ Code auschecken
    - uses: actions/checkout@v4

    # 2 ─ Python 3.11
    - uses: actions/setup-python@v5
      with: { python-version: '3.11' }

    # 3 ─ Python-Pakete
    - name: Install Python deps
      run: |
        pip install --upgrade pip
        pip install google-cloud-texttospeech>=2.16.1
        pip install -r requirements.txt

    # 4 ─ Service-Account-JSON schreiben (Base-64-Secret!)
    - name: Write SA key & set ADC
      run: |
        echo '${{ secrets.GDRIVE_CREDENTIALS_B64 }}' | base64 -d > /tmp/sa.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/sa.json" >> $GITHUB_ENV

    # 5 ─ Inhalte sammeln ► Script ► MP3
    - run: python crawl.py
      name: Crawl & score news

    - run: python summarize.py
      name: Build podcast script

    - run: python tts.py
      name: Generate MP3 (Google TTS)          # output/YYYY-MM-DD_briefing.mp3

    # 6 ─ erzeugtes MP3 in Root kopieren (fester Name)
    - name: Rename MP3
      run: |
        cp output/*.mp3 briefing.mp3
        ls -l briefing.mp3

    # 7 ─ rclone installieren
    - name: Install rclone
      run: |
        curl -fsSL https://rclone.org/install.sh | sudo bash

    # 8 ─ Upload via rclone (Service-Account)
    - name: Upload MP3 to Google Drive
      run: |
        cat > /tmp/rclone.conf <<EOF
        [drive]
        type = drive
        scope = drive
        service_account_file = /tmp/sa.json
        root_folder_id = ${GOOGLE_DRIVE_FOLDER}
        EOF

        rclone --config /tmp/rclone.conf copy briefing.mp3 drive:
