name: Daily AI Business Briefing

on:
  schedule:
    - cron:  '30 3 * * *'          # 05 : 30 CEST
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY:       ${{ secrets.OPENAI_API_KEY }}
      GOOGLE_DRIVE_FOLDER:  ${{ secrets.GOOGLE_DRIVE_FOLDER }}

    steps:
      # 1 Repo
      - uses: actions/checkout@v4

      # 2 Python
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      # 3 Packages
      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install google-cloud-texttospeech>=2.16.1
          pip install -r requirements.txt

      # 4 Service-Account
      - name: Prepare ADC
        run: |
          echo '${{ secrets.GDRIVE_CREDENTIALS_B64 }}' | base64 -d > /tmp/sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/sa.json" >> $GITHUB_ENV

      # 5 Content
      - run: python crawl.py          # articles.json
        name: Crawl & score news
      - run: python summarize.py      # script.txt
        name: Build podcast script
      - run: python tts.py            # output/…_briefing.mp3 + part_xx.mp3
        name: Generate MP3 (Google TTS)

      # 6 Nur finale Datei herausziehen
      - name: Select final MP3
        id: mp3
        run: |
          FILE=$(ls output/*_briefing.mp3)
          mv "$FILE" briefing.mp3
          rm output/part_*.mp3        # Aufräumen der Einzel-Chunks
          echo "FULL=$(pwd)/briefing.mp3" >> "$GITHUB_OUTPUT"
          ls -l briefing.mp3

      # 7 rclone
      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash

      # 8 Upload
      - name: Upload MP3 to Google Drive
        run: |
          cat > /tmp/rclone.conf <<EOF
          [drive]
          type = drive
          scope = drive
          service_account_file = /tmp/sa.json
          root_folder_id = ${GOOGLE_DRIVE_FOLDER}
          EOF
          rclone --config /tmp/rclone.conf copy ${{ steps.mp3.outputs.FULL }} drive:
